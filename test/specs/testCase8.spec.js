import loginPage from "../pageobjects/login.page";
import inventoryPage from "../pageobjects/inventory.page";
import cartPage from "../pageobjects/cart.page";
import checkoutPage from "../pageobjects/checkout.page";
import overviewPage from "../pageobjects/overview.page";
import checkoutCompletePage from "../pageobjects/checkoutComplete.page";

describe("e2e", () => {
  const standardUser = process.env.STANDARD_USER_NAME;
  const lockedOutUser = process.env.LOCKED_OUT_USER_NAME;
  const problem_user = process.env.PROBLEM_USER_NAME;
  const performanceGlitchUser = process.env.PERFORMANCE_GLITCH_USER_NAME;
  const errorUser = process.env.ERROR_USER_NAME;
  const visualUser = process.env.VISUAL_USER_NAME;
  const password = process.env.SECRET_PASSWORD;

  it("Valid checkout with standard_user", async () => {
    await loginPage.open();
    await loginPage.fillOutInputs(standardUser, password);
    await loginPage.login();
    await inventoryPage.addToCart(1);
    await inventoryPage.verifyCartBage("yes", 1);
    const selectedItemName = await inventoryPage.getSelectedItemName();
    const selectedItemPrice = await inventoryPage.getSelectedItemPrice();
    await inventoryPage.getToCart();
    await cartPage.verifyItemsInCart(selectedItemName);
    await cartPage.openCheckoutForm();
    await checkoutPage.fillOutTheForm("Dmytro", "Reva", 25009);
    await checkoutPage.submitForm();
    await overviewPage.verifyItemsInOverview(selectedItemName);
    await overviewPage.checkSubTotalPrice(selectedItemPrice);
    await overviewPage.finishCheckout();
    await checkoutCompletePage.verifyCheckoutCompleteTitle();
    await checkoutCompletePage.getBackToinventoryPage();
    await inventoryPage.verifyCartBage();
  });
  it("Valid checkout with locked_out_user", async () => {
    await loginPage.open();
    await loginPage.fillOutInputs(lockedOutUser, password);
    await loginPage.login();
    await inventoryPage.addToCart(1);
    await inventoryPage.verifyCartBage("yes", 1);
    const selectedItemName = await inventoryPage.getSelectedItemName();
    const selectedItemPrice = await inventoryPage.getSelectedItemPrice();
    await inventoryPage.getToCart();
    await cartPage.verifyItemsInCart(selectedItemName);
    await cartPage.openCheckoutForm();
    await checkoutPage.fillOutTheForm("Dmytro", "Reva", 25009);
    await checkoutPage.submitForm();
    await overviewPage.verifyItemsInOverview(selectedItemName);
    await overviewPage.checkSubTotalPrice(selectedItemPrice);
    await overviewPage.finishCheckout();
    await checkoutCompletePage.verifyCheckoutCompleteTitle();
    await checkoutCompletePage.getBackToinventoryPage();
    await inventoryPage.verifyCartBage();
  });
  it("Valid checkout with problem_user", async () => {
    await loginPage.open();
    await loginPage.fillOutInputs(problem_user, password);
    await loginPage.login();
    await inventoryPage.addToCart(1);
    await inventoryPage.verifyCartBage("yes", 1);
    const selectedItemName = await inventoryPage.getSelectedItemName();
    const selectedItemPrice = await inventoryPage.getSelectedItemPrice();
    await inventoryPage.getToCart();
    await cartPage.verifyItemsInCart(selectedItemName);
    await cartPage.openCheckoutForm();
    await checkoutPage.fillOutTheForm("Dmytro", "Reva", 25009);
    await checkoutPage.submitForm();
    await overviewPage.verifyItemsInOverview(selectedItemName);
    await overviewPage.checkSubTotalPrice(selectedItemPrice);
    await overviewPage.finishCheckout();
    await checkoutCompletePage.verifyCheckoutCompleteTitle();
    await checkoutCompletePage.getBackToinventoryPage();
    await inventoryPage.verifyCartBage();
  });
  it("Valid checkout with performance_glitch_user", async () => {
    await loginPage.open();
    await loginPage.fillOutInputs(performanceGlitchUser, password);
    await loginPage.login();
    await inventoryPage.addToCart(1);
    await inventoryPage.verifyCartBage("yes", 1);
    const selectedItemName = await inventoryPage.getSelectedItemName();
    const selectedItemPrice = await inventoryPage.getSelectedItemPrice();
    await inventoryPage.getToCart();
    await cartPage.verifyItemsInCart(selectedItemName);
    await cartPage.openCheckoutForm();
    await checkoutPage.fillOutTheForm("Dmytro", "Reva", 25009);
    await checkoutPage.submitForm();
    await overviewPage.verifyItemsInOverview(selectedItemName);
    await overviewPage.checkSubTotalPrice(selectedItemPrice);
    await overviewPage.finishCheckout();
    await checkoutCompletePage.verifyCheckoutCompleteTitle();
    await checkoutCompletePage.getBackToinventoryPage();
    await inventoryPage.verifyCartBage();
  });
  it("Valid checkout with error_user", async () => {
    await loginPage.open();
    await loginPage.fillOutInputs(errorUser, password);
    await loginPage.login();
    await inventoryPage.addToCart(1);
    await inventoryPage.verifyCartBage("yes", 1);
    const selectedItemName = await inventoryPage.getSelectedItemName();
    const selectedItemPrice = await inventoryPage.getSelectedItemPrice();
    await inventoryPage.getToCart();
    await cartPage.verifyItemsInCart(selectedItemName);
    await cartPage.openCheckoutForm();
    await checkoutPage.fillOutTheForm("Dmytro", "Reva", 25009);
    await checkoutPage.submitForm();
    await overviewPage.verifyItemsInOverview(selectedItemName);
    await overviewPage.checkSubTotalPrice(selectedItemPrice);
    await overviewPage.finishCheckout();
    await checkoutCompletePage.verifyCheckoutCompleteTitle();
    await checkoutCompletePage.getBackToinventoryPage();
    await inventoryPage.verifyCartBage();
  });
  it("Valid checkout with visual_user", async () => {
    await loginPage.open();
    await loginPage.fillOutInputs(visualUser, password);
    await loginPage.login();
    await inventoryPage.addToCart(1);
    await inventoryPage.verifyCartBage("yes", 1);
    const selectedItemName = await inventoryPage.getSelectedItemName();
    const selectedItemPrice = await inventoryPage.getSelectedItemPrice();
    await inventoryPage.getToCart();
    await cartPage.verifyItemsInCart(selectedItemName);
    await cartPage.openCheckoutForm();
    await checkoutPage.fillOutTheForm("Dmytro", "Reva", 25009);
    await checkoutPage.submitForm();
    await overviewPage.verifyItemsInOverview(selectedItemName);
    await overviewPage.checkSubTotalPrice(selectedItemPrice);
    await overviewPage.finishCheckout();
    await checkoutCompletePage.verifyCheckoutCompleteTitle();
    await checkoutCompletePage.getBackToinventoryPage();
    await inventoryPage.verifyCartBage();
  });
});
